name: build

# Run Workflow manually or on push to master
on:
  push:
    branches: [ master ]
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    strategy: 
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.8', '3.9', '3.10']
        
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        name: Checkout commit
      
      # Install Python
      - uses: actions/setup-python@v2
        name: Setup Python
        with: 
          python-version: ${{ matrix.python-version }}
          architecture: 'x64'
          
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      
      - name: Install dependencies
        run: pip instal -r requirements.txt
        
      - name: Build application
        run: pyinstaller main.py
      
      - name: Create zip
        uses: thedoctor0/zip-release@master
        with: 
          type: 'zip'
          filename: release-${{ matrix.os }}-{{ matrix.python-version }}
          path: 'dist/main/'
          
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with: 
          tag_name: ${{ github.ref }}
          release_name: Release $ {{ github.ref }}
          body: |
            Compilation of new features
          prerelease: false
                    
      - name: Archive artifact
        uses: action/upload-artifact@v2
        with: 
          name: release-${{ matrix.os }}-{{ matrix.python-version }}
          path: release-${{ matrix.os }}-{{ matrix.python-version }}.zip
          
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release-${{ matrix.os }}-{{ matrix.python-version }}.zip
          asset_name: release-${{ matrix.os }}-{{ matrix.python-version }}.zip
          asset_content_type: application/zip
          
      - name: Publish release
        uses: StuYarrow/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with: 
          id: ${{ steps.create_release.outputs.id }}
